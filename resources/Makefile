# Makefile.in generated by automake 1.11.1 from Makefile.am.
# resources/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/trophy
pkgincludedir = $(includedir)/trophy
pkglibdir = $(libdir)/trophy
pkglibexecdir = $(libexecdir)/trophy
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = resources
DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
man6dir = $(mandir)/man6
am__installdirs = "$(DESTDIR)$(man6dir)" "$(DESTDIR)$(Downtowndir)" \
	"$(DESTDIR)$(Industrialdir)" "$(DESTDIR)$(Loopsdir)" \
	"$(DESTDIR)$(Moondir)" "$(DESTDIR)$(Rallydir)" \
	"$(DESTDIR)$(Snakedir)" "$(DESTDIR)$(Zigzagdir)" \
	"$(DESTDIR)$(Zurichdir)" "$(DESTDIR)$(armorsdir)" \
	"$(DESTDIR)$(carsdir)" "$(DESTDIR)$(desktopdir)" \
	"$(DESTDIR)$(flash2dir)" "$(DESTDIR)$(fontsdir)" \
	"$(DESTDIR)$(goodydir)" "$(DESTDIR)$(guidir)" \
	"$(DESTDIR)$(icondir)" "$(DESTDIR)$(jeepdir)" \
	"$(DESTDIR)$(menudir)" "$(DESTDIR)$(miscdir)" \
	"$(DESTDIR)$(motorsdir)" "$(DESTDIR)$(paneldir)" \
	"$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(soundsdir)" \
	"$(DESTDIR)$(tiresdir)" "$(DESTDIR)$(vwdir)" \
	"$(DESTDIR)$(z3dir)"
NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(Downtown_DATA) $(Industrial_DATA) $(Loops_DATA) $(Moon_DATA) \
	$(Rally_DATA) $(Snake_DATA) $(Zigzag_DATA) $(Zurich_DATA) \
	$(armors_DATA) $(cars_DATA) $(desktop_DATA) $(flash2_DATA) \
	$(fonts_DATA) $(goody_DATA) $(gui_DATA) $(icon_DATA) \
	$(jeep_DATA) $(menu_DATA) $(misc_DATA) $(motors_DATA) \
	$(panel_DATA) $(pkgdata_DATA) $(sounds_DATA) $(tires_DATA) \
	$(vw_DATA) $(z3_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/missing --run tar
AUTOCONF = ${SHELL} /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLANLIB_CFLAGS = -I/usr/include/ClanLib-1.0
CLANLIB_LIBS = -lclanGL -lclanSound -lclanDisplay -lclanCore -lclanSignals -lclanApp
CLANLIB_MODULES = clanSignals-1.0 clanGL-1.0 clanCore-1.0 clanSound-1.0 clanDisplay-1.0 clanApp-1.0
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"trophy\" -DVERSION=\"2.0.3\" -DHAVE_LIBCLANSIGNALS=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lclanSignals 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = trophy
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 2.0.3
abs_builddir = /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/resources
abs_srcdir = /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/resources
abs_top_builddir = /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3
abs_top_srcdir = /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/mightypirate1/Documents/Courses/Machinelearning/Project/trophy/trophy-2.0.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
dist_man_MANS = trophy.6
pkgdata_DATA = resources.xml
desktopdir = $(datadir)/applications
desktop_DATA = trophy.desktop
icondir = $(datadir)/icons
icon_DATA = trophy.png
flash2dir = $(pkgdatadir)/cars/flash2
flash2_DATA = cars/flash2/surface.tga cars/flash2/surface3d.tga 
jeepdir = $(pkgdatadir)/cars/jeep
jeep_DATA = cars/jeep/surface.tga cars/jeep/surface3d.tga
vwdir = $(pkgdatadir)/cars/vw
vw_DATA = cars/vw/surface.tga cars/vw/surface3d.tga 
z3dir = $(pkgdatadir)/cars/z3
z3_DATA = cars/z3/surface.tga cars/z3/surface3d.tga 
carsdir = $(pkgdatadir)/cars
cars_DATA = cars/dust.tga
fontsdir = $(pkgdatadir)/fonts
fonts_DATA = fonts/normal_22_white.tga fonts/normal_22_gray.tga fonts/lcd_13_green.tga fonts/normal_8_white.tga \
	      fonts/normal_11_white.tga fonts/normal_14_white.tga 

goodydir = $(pkgdatadir)/goody
goody_DATA = goody/turbo.tga goody/fogbomb.tga goody/bullets.tga goody/life.tga goody/money.tga
guidir = $(pkgdatadir)/gui
gui_DATA = gui/button.tga gui/progressbar.tga gui/border1.tga gui/border2.tga \
	    gui/border3.tga gui/border4.tga gui/arrow_b.tga gui/arrow_l.tga gui/arrow_r.tga \
	    gui/edge1.tga gui/arrow_t.tga gui/edge2.tga gui/edge3.tga gui/edge4.tga \
	    gui/loading.tga 

menudir = $(pkgdatadir)/menu
menu_DATA = menu/bg.tga menu/bar.tga menu/cursorani.tga 
miscdir = $(pkgdatadir)/misc
misc_DATA = misc/dust.tga misc/checkflag.tga misc/gunfire.tga misc/cross.tga misc/fog.tga misc/hitpoint.tga \
	    misc/carfire.tga misc/light.tga misc/caution.tga misc/info.tga misc/verticalbar.tga misc/flag.tga

paneldir = $(pkgdatadir)/panel
panel_DATA = panel/death.tga panel/turbo.tga panel/label.tga panel/infoview.tga panel/button.tga \
	    panel/speed.tga panel/turbolabel.tga panel/life.tga panel/bullets.tga

soundsdir = $(pkgdatadir)/sounds
sounds_DATA = sounds/menu.wav sounds/shot.wav sounds/dog.wav sounds/goody_money.wav sounds/goody_life.wav \
	      sounds/selector.wav sounds/crash.wav sounds/fogbomb.wav sounds/fire.wav sounds/shoot.wav \
	      sounds/goody.wav sounds/goody_turbo.wav sounds/engine.wav sounds/goody_fogbomb.wav \
	      sounds/background01.wav sounds/carhorn.wav sounds/light.wav sounds/goody_bullets.wav \
	      sounds/slide.wav

armorsdir = $(pkgdatadir)/upgrades/armors
armors_DATA = upgrades/armors/armor_1.tga upgrades/armors/armor_2.tga upgrades/armors/armor_3.tga upgrades/armors/armor_4.tga upgrades/armors/armor_5.tga
motorsdir = $(pkgdatadir)/upgrades/motors
motors_DATA = upgrades/motors/motor_1.tga upgrades/motors/motor_2.tga upgrades/motors/motor_3.tga upgrades/motors/motor_4.tga upgrades/motors/motor_5.tga
tiresdir = $(pkgdatadir)/upgrades/tires
tires_DATA = upgrades/tires/tires_1.tga upgrades/tires/tires_2.tga upgrades/tires/tires_3.tga upgrades/tires/tires_4.tga upgrades/tires/tires_5.tga
Downtowndir = $(pkgdatadir)/tracks/Downtown
Downtown_DATA = tracks/Downtown/vmap.tga tracks/Downtown/config.tck tracks/Downtown/bridge.tga tracks/Downtown/fmap.tga tracks/Downtown/thumb.tga 
Loopsdir = $(pkgdatadir)/tracks/Loops
Loops_DATA = tracks/Loops/vmap.tga tracks/Loops/config.tck tracks/Loops/bridge.tga tracks/Loops/fmap.tga tracks/Loops/thumb.tga 
Moondir = $(pkgdatadir)/tracks/Moon
Moon_DATA = tracks/Moon/vmap.tga tracks/Moon/config.tck tracks/Moon/bridge.tga tracks/Moon/fmap.tga tracks/Moon/thumb.tga 
Rallydir = $(pkgdatadir)/tracks/Rally
Rally_DATA = tracks/Rally/vmap.tga tracks/Rally/config.tck tracks/Rally/fmap.tga tracks/Rally/thumb.tga 
Snakedir = $(pkgdatadir)/tracks/Snake
Snake_DATA = tracks/Snake/vmap.tga tracks/Snake/config.tck tracks/Snake/bridge.tga tracks/Snake/fmap.tga tracks/Snake/thumb.tga 
Zigzagdir = $(pkgdatadir)/tracks/Zigzag
Zigzag_DATA = tracks/Zigzag/vmap.tga tracks/Zigzag/config.tck tracks/Zigzag/bridge.tga tracks/Zigzag/fmap.tga tracks/Zigzag/thumb.tga 
Zurichdir = $(pkgdatadir)/tracks/Zurich
Zurich_DATA = tracks/Zurich/vmap.tga tracks/Zurich/config.tck tracks/Zurich/fmap.tga tracks/Zurich/thumb.tga 
Industrialdir = $(pkgdatadir)/tracks/Industrial
Industrial_DATA = tracks/Industrial/vmap.tga tracks/Industrial/bridge.tga tracks/Industrial/fmap.tga tracks/Industrial/thumb.tga tracks/Industrial/config.tck
EXTRA_DIST = $(desktop_DATA) $(pkgdata_DATA) $(icon_DATA) $(flash2_DATA) $(jeep_DATA) $(vw_DATA) $(z3_DATA) $(cars_DATA) $(fonts_DATA) $(goody_DATA) $(gui_DATA) $(menu_DATA) $(misc_DATA) $(panel_DATA) $(sounds_DATA) $(armors_DATA) $(motors_DATA) $(tires_DATA) $(Downtown_DATA) $(Loops_DATA) $(Moon_DATA) $(Rally_DATA) $(Snake_DATA) $(Zigzag_DATA) $(Zurich_DATA) $(Industrial_DATA)
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu resources/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu resources/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-man6: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man6dir)" || $(MKDIR_P) "$(DESTDIR)$(man6dir)"
	@list=''; test -n "$(man6dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.6[a-z]*$$/p'; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^6][0-9a-z]*$$,6,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man6dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man6dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man6dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man6dir)" || exit $$?; }; \
	done; }

uninstall-man6:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man6dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.6[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^6][0-9a-z]*$$,6,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man6dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man6dir)" && rm -f $$files; }
install-DowntownDATA: $(Downtown_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Downtowndir)" || $(MKDIR_P) "$(DESTDIR)$(Downtowndir)"
	@list='$(Downtown_DATA)'; test -n "$(Downtowndir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Downtowndir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Downtowndir)" || exit $$?; \
	done

uninstall-DowntownDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Downtown_DATA)'; test -n "$(Downtowndir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Downtowndir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Downtowndir)" && rm -f $$files
install-IndustrialDATA: $(Industrial_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Industrialdir)" || $(MKDIR_P) "$(DESTDIR)$(Industrialdir)"
	@list='$(Industrial_DATA)'; test -n "$(Industrialdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Industrialdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Industrialdir)" || exit $$?; \
	done

uninstall-IndustrialDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Industrial_DATA)'; test -n "$(Industrialdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Industrialdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Industrialdir)" && rm -f $$files
install-LoopsDATA: $(Loops_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Loopsdir)" || $(MKDIR_P) "$(DESTDIR)$(Loopsdir)"
	@list='$(Loops_DATA)'; test -n "$(Loopsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Loopsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Loopsdir)" || exit $$?; \
	done

uninstall-LoopsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Loops_DATA)'; test -n "$(Loopsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Loopsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Loopsdir)" && rm -f $$files
install-MoonDATA: $(Moon_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Moondir)" || $(MKDIR_P) "$(DESTDIR)$(Moondir)"
	@list='$(Moon_DATA)'; test -n "$(Moondir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Moondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Moondir)" || exit $$?; \
	done

uninstall-MoonDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Moon_DATA)'; test -n "$(Moondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Moondir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Moondir)" && rm -f $$files
install-RallyDATA: $(Rally_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Rallydir)" || $(MKDIR_P) "$(DESTDIR)$(Rallydir)"
	@list='$(Rally_DATA)'; test -n "$(Rallydir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Rallydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Rallydir)" || exit $$?; \
	done

uninstall-RallyDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Rally_DATA)'; test -n "$(Rallydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Rallydir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Rallydir)" && rm -f $$files
install-SnakeDATA: $(Snake_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Snakedir)" || $(MKDIR_P) "$(DESTDIR)$(Snakedir)"
	@list='$(Snake_DATA)'; test -n "$(Snakedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Snakedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Snakedir)" || exit $$?; \
	done

uninstall-SnakeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Snake_DATA)'; test -n "$(Snakedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Snakedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Snakedir)" && rm -f $$files
install-ZigzagDATA: $(Zigzag_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Zigzagdir)" || $(MKDIR_P) "$(DESTDIR)$(Zigzagdir)"
	@list='$(Zigzag_DATA)'; test -n "$(Zigzagdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Zigzagdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Zigzagdir)" || exit $$?; \
	done

uninstall-ZigzagDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Zigzag_DATA)'; test -n "$(Zigzagdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Zigzagdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Zigzagdir)" && rm -f $$files
install-ZurichDATA: $(Zurich_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(Zurichdir)" || $(MKDIR_P) "$(DESTDIR)$(Zurichdir)"
	@list='$(Zurich_DATA)'; test -n "$(Zurichdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(Zurichdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(Zurichdir)" || exit $$?; \
	done

uninstall-ZurichDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(Zurich_DATA)'; test -n "$(Zurichdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(Zurichdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(Zurichdir)" && rm -f $$files
install-armorsDATA: $(armors_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(armorsdir)" || $(MKDIR_P) "$(DESTDIR)$(armorsdir)"
	@list='$(armors_DATA)'; test -n "$(armorsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(armorsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(armorsdir)" || exit $$?; \
	done

uninstall-armorsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(armors_DATA)'; test -n "$(armorsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(armorsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(armorsdir)" && rm -f $$files
install-carsDATA: $(cars_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(carsdir)" || $(MKDIR_P) "$(DESTDIR)$(carsdir)"
	@list='$(cars_DATA)'; test -n "$(carsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(carsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(carsdir)" || exit $$?; \
	done

uninstall-carsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(cars_DATA)'; test -n "$(carsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(carsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(carsdir)" && rm -f $$files
install-desktopDATA: $(desktop_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(desktopdir)" || $(MKDIR_P) "$(DESTDIR)$(desktopdir)"
	@list='$(desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(desktopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(desktopdir)" || exit $$?; \
	done

uninstall-desktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(desktopdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(desktopdir)" && rm -f $$files
install-flash2DATA: $(flash2_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(flash2dir)" || $(MKDIR_P) "$(DESTDIR)$(flash2dir)"
	@list='$(flash2_DATA)'; test -n "$(flash2dir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(flash2dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(flash2dir)" || exit $$?; \
	done

uninstall-flash2DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(flash2_DATA)'; test -n "$(flash2dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(flash2dir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(flash2dir)" && rm -f $$files
install-fontsDATA: $(fonts_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(fontsdir)" || $(MKDIR_P) "$(DESTDIR)$(fontsdir)"
	@list='$(fonts_DATA)'; test -n "$(fontsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(fontsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(fontsdir)" || exit $$?; \
	done

uninstall-fontsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(fonts_DATA)'; test -n "$(fontsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(fontsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(fontsdir)" && rm -f $$files
install-goodyDATA: $(goody_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(goodydir)" || $(MKDIR_P) "$(DESTDIR)$(goodydir)"
	@list='$(goody_DATA)'; test -n "$(goodydir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(goodydir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(goodydir)" || exit $$?; \
	done

uninstall-goodyDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(goody_DATA)'; test -n "$(goodydir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(goodydir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(goodydir)" && rm -f $$files
install-guiDATA: $(gui_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(guidir)" || $(MKDIR_P) "$(DESTDIR)$(guidir)"
	@list='$(gui_DATA)'; test -n "$(guidir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(guidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(guidir)" || exit $$?; \
	done

uninstall-guiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(gui_DATA)'; test -n "$(guidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(guidir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(guidir)" && rm -f $$files
install-iconDATA: $(icon_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(icondir)" || $(MKDIR_P) "$(DESTDIR)$(icondir)"
	@list='$(icon_DATA)'; test -n "$(icondir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(icondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(icondir)" || exit $$?; \
	done

uninstall-iconDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(icon_DATA)'; test -n "$(icondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(icondir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(icondir)" && rm -f $$files
install-jeepDATA: $(jeep_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(jeepdir)" || $(MKDIR_P) "$(DESTDIR)$(jeepdir)"
	@list='$(jeep_DATA)'; test -n "$(jeepdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(jeepdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(jeepdir)" || exit $$?; \
	done

uninstall-jeepDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(jeep_DATA)'; test -n "$(jeepdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(jeepdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(jeepdir)" && rm -f $$files
install-menuDATA: $(menu_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(menudir)" || $(MKDIR_P) "$(DESTDIR)$(menudir)"
	@list='$(menu_DATA)'; test -n "$(menudir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(menudir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(menudir)" || exit $$?; \
	done

uninstall-menuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(menu_DATA)'; test -n "$(menudir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(menudir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(menudir)" && rm -f $$files
install-miscDATA: $(misc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(miscdir)" || $(MKDIR_P) "$(DESTDIR)$(miscdir)"
	@list='$(misc_DATA)'; test -n "$(miscdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(miscdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(miscdir)" || exit $$?; \
	done

uninstall-miscDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(misc_DATA)'; test -n "$(miscdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(miscdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(miscdir)" && rm -f $$files
install-motorsDATA: $(motors_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(motorsdir)" || $(MKDIR_P) "$(DESTDIR)$(motorsdir)"
	@list='$(motors_DATA)'; test -n "$(motorsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(motorsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(motorsdir)" || exit $$?; \
	done

uninstall-motorsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(motors_DATA)'; test -n "$(motorsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(motorsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(motorsdir)" && rm -f $$files
install-panelDATA: $(panel_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(paneldir)" || $(MKDIR_P) "$(DESTDIR)$(paneldir)"
	@list='$(panel_DATA)'; test -n "$(paneldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(paneldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(paneldir)" || exit $$?; \
	done

uninstall-panelDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(panel_DATA)'; test -n "$(paneldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(paneldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(paneldir)" && rm -f $$files
install-pkgdataDATA: $(pkgdata_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgdatadir)" || $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)"
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgdatadir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgdatadir)" && rm -f $$files
install-soundsDATA: $(sounds_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(soundsdir)" || $(MKDIR_P) "$(DESTDIR)$(soundsdir)"
	@list='$(sounds_DATA)'; test -n "$(soundsdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(soundsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(soundsdir)" || exit $$?; \
	done

uninstall-soundsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sounds_DATA)'; test -n "$(soundsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(soundsdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(soundsdir)" && rm -f $$files
install-tiresDATA: $(tires_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tiresdir)" || $(MKDIR_P) "$(DESTDIR)$(tiresdir)"
	@list='$(tires_DATA)'; test -n "$(tiresdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(tiresdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(tiresdir)" || exit $$?; \
	done

uninstall-tiresDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tires_DATA)'; test -n "$(tiresdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(tiresdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(tiresdir)" && rm -f $$files
install-vwDATA: $(vw_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(vwdir)" || $(MKDIR_P) "$(DESTDIR)$(vwdir)"
	@list='$(vw_DATA)'; test -n "$(vwdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vwdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vwdir)" || exit $$?; \
	done

uninstall-vwDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(vw_DATA)'; test -n "$(vwdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(vwdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(vwdir)" && rm -f $$files
install-z3DATA: $(z3_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(z3dir)" || $(MKDIR_P) "$(DESTDIR)$(z3dir)"
	@list='$(z3_DATA)'; test -n "$(z3dir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(z3dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(z3dir)" || exit $$?; \
	done

uninstall-z3DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(z3_DATA)'; test -n "$(z3dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(z3dir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(z3dir)" && rm -f $$files
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(MANS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(man6dir)" "$(DESTDIR)$(Downtowndir)" "$(DESTDIR)$(Industrialdir)" "$(DESTDIR)$(Loopsdir)" "$(DESTDIR)$(Moondir)" "$(DESTDIR)$(Rallydir)" "$(DESTDIR)$(Snakedir)" "$(DESTDIR)$(Zigzagdir)" "$(DESTDIR)$(Zurichdir)" "$(DESTDIR)$(armorsdir)" "$(DESTDIR)$(carsdir)" "$(DESTDIR)$(desktopdir)" "$(DESTDIR)$(flash2dir)" "$(DESTDIR)$(fontsdir)" "$(DESTDIR)$(goodydir)" "$(DESTDIR)$(guidir)" "$(DESTDIR)$(icondir)" "$(DESTDIR)$(jeepdir)" "$(DESTDIR)$(menudir)" "$(DESTDIR)$(miscdir)" "$(DESTDIR)$(motorsdir)" "$(DESTDIR)$(paneldir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(soundsdir)" "$(DESTDIR)$(tiresdir)" "$(DESTDIR)$(vwdir)" "$(DESTDIR)$(z3dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-DowntownDATA install-IndustrialDATA \
	install-LoopsDATA install-MoonDATA install-RallyDATA \
	install-SnakeDATA install-ZigzagDATA install-ZurichDATA \
	install-armorsDATA install-carsDATA install-desktopDATA \
	install-flash2DATA install-fontsDATA install-goodyDATA \
	install-guiDATA install-iconDATA install-jeepDATA install-man \
	install-menuDATA install-miscDATA install-motorsDATA \
	install-panelDATA install-pkgdataDATA install-soundsDATA \
	install-tiresDATA install-vwDATA install-z3DATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man6

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-DowntownDATA uninstall-IndustrialDATA \
	uninstall-LoopsDATA uninstall-MoonDATA uninstall-RallyDATA \
	uninstall-SnakeDATA uninstall-ZigzagDATA uninstall-ZurichDATA \
	uninstall-armorsDATA uninstall-carsDATA uninstall-desktopDATA \
	uninstall-flash2DATA uninstall-fontsDATA uninstall-goodyDATA \
	uninstall-guiDATA uninstall-iconDATA uninstall-jeepDATA \
	uninstall-man uninstall-menuDATA uninstall-miscDATA \
	uninstall-motorsDATA uninstall-panelDATA uninstall-pkgdataDATA \
	uninstall-soundsDATA uninstall-tiresDATA uninstall-vwDATA \
	uninstall-z3DATA

uninstall-man: uninstall-man6

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-DowntownDATA install-IndustrialDATA \
	install-LoopsDATA install-MoonDATA install-RallyDATA \
	install-SnakeDATA install-ZigzagDATA install-ZurichDATA \
	install-am install-armorsDATA install-carsDATA install-data \
	install-data-am install-desktopDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-flash2DATA \
	install-fontsDATA install-goodyDATA install-guiDATA \
	install-html install-html-am install-iconDATA install-info \
	install-info-am install-jeepDATA install-man install-man6 \
	install-menuDATA install-miscDATA install-motorsDATA \
	install-panelDATA install-pdf install-pdf-am \
	install-pkgdataDATA install-ps install-ps-am \
	install-soundsDATA install-strip install-tiresDATA \
	install-vwDATA install-z3DATA installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am uninstall \
	uninstall-DowntownDATA uninstall-IndustrialDATA \
	uninstall-LoopsDATA uninstall-MoonDATA uninstall-RallyDATA \
	uninstall-SnakeDATA uninstall-ZigzagDATA uninstall-ZurichDATA \
	uninstall-am uninstall-armorsDATA uninstall-carsDATA \
	uninstall-desktopDATA uninstall-flash2DATA uninstall-fontsDATA \
	uninstall-goodyDATA uninstall-guiDATA uninstall-iconDATA \
	uninstall-jeepDATA uninstall-man uninstall-man6 \
	uninstall-menuDATA uninstall-miscDATA uninstall-motorsDATA \
	uninstall-panelDATA uninstall-pkgdataDATA uninstall-soundsDATA \
	uninstall-tiresDATA uninstall-vwDATA uninstall-z3DATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
